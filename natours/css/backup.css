

:root {
    --light-green: hsla(111, 55%, 64%, 1);
    --medium-green: hsla(140, 49%, 55%, 1);
    --dark-green: hsla(160, 64%, 43%, 1);
}



/* STYLES  */

*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    font-size: 62.5%; /* 10px = 1rem | 62.5%  of default 16px = 10px but allow user to increase*/
}

body {
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 3rem;
    box-sizing: border-box;
}

/* HEADER  */

.header {
    height: 95vh;
    background-image: linear-gradient(to right bottom,
            hsla(111, 55%, 64%, 0.8),
            hsla(160, 64%, 43%, 0.8)),
        url(../img/hero.jpg);
    background-size: cover;
    background-position: top;

    position: relative;
    clip-path: polygon(0 0, 0 100%, 100% 75%, 100% 0);
}

.header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.header__logo {
    height: 3.5rem;
}

.header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;

}

.heading-primary {
    color: #fff;
    text-transform: uppercase;
    margin-bottom: 6rem;

    /* To fix shake from animation  */
    backface-visibility: hidden;
}

.heading-primary--main {
    display: block;
    font-size: 6rem;
    font-family: 400;
    letter-spacing: 3.35rem;
    animation-name: moveInLeft;
    animation-duration: 2s;
    animation-timing-function: ease-out;

    /* Other animation properties : 
    animation-delay          : 3s;
    animation-iteration-count: 3;
*/
}

.heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;

    animation: moveInRight 2s ease-out;
}


.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s ease-out;
    position: relative;
    font-size: 1.6rem,
}

.btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

.btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
    background-color: #fff;
    color: #777;    
}

/* BUTTON ANIMATION USING PSEUDOELEMENTS */

/* Content and display must be provided for ::after and ::before */
/* The after pseudoelement acts like a child of the element  */
.btn::after {
    content: "";
    display:inline-block;
    height: 100%;
    width: 100%; 
    border-radius: 10rem;
    position: absolute;
    top:0;
    left: 0;
    z-index: -1;
    transition: all .4s ease-out;

}

.btn--white::after {
    background-color: #fff;
}


.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn--animated {
    animation: moveInBottom .5s ease-out .75s;
    /* Define the initial state as 0% */
    animation-fill-mode: backwards;

}

/* ANIMATIONS  */

/* For browser perfomance is best to animate only two properties: opacity and transform */
@keyframes moveInLeft {

    /* Define element properties before the animation starts */
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    /* We can add any % we want to define what happen in this stage of the animation */
    50% {
        transform: translateX(2.5rem);
    }

    /* When the animation finishes  */
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    50% {
        transform: translateX(-2.5rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }


    100% {
        opacity: 1;
        transform: translate(0);
    }
}
